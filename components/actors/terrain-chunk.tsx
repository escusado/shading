// Terrain plane mesh, uses the heighmap generated by the canvas

import React, { FC } from "react";
import { animated } from "@react-spring/three";
import { select } from "@ngneat/elf";
import { useObservable } from "@ngneat/use-observable";

import { appStateStore } from "../app";
import { Plane, Vector3 } from "three";

const clippingPlanes = [
  new Plane(new Vector3(0.7, 0, 1), 3),
  new Plane(new Vector3(0.7, 0, -1), 3),
  new Plane(new Vector3(-0.7, 0, 1), 3),
  new Plane(new Vector3(-0.7, 0, -1), 3),
];

const TerrainChunk: FC = () => {
  const [terrainHeightmapTexture] = useObservable(
    appStateStore.pipe(select((state) => state.terrainHeightmapTexture))
  );
  const [terrainTexture] = useObservable(
    appStateStore.pipe(select((state) => state.terrainTexture))
  );
  const [terrainSize] = useObservable(
    appStateStore.pipe(select((state) => state.terrainSize))
  );

  return (
    <>
      <animated.mesh
        rotation={[-1.5708, 0, 0]} // flip to correct axis
        receiveShadow
      >
        <planeGeometry
          args={[
            terrainSize.x,
            terrainSize.y,
            terrainSize.x * 2,
            terrainSize.y * 2,
          ]}
          onUpdate={(self) => self.computeVertexNormals()}
        />
        <meshPhongMaterial
          // color={terrainColor}
          displacementMap={terrainHeightmapTexture}
          displacementScale={2}
          flatShading={true}
          map={terrainTexture}
          clippingPlanes={clippingPlanes}
        />
      </animated.mesh>
    </>
  );
};

export default TerrainChunk;
