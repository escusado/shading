// Terrain plane mesh, uses the heighmap generated by the canvas

import React, { FC, useEffect, useRef } from "react";
import { animated } from "@react-spring/three";
import { select } from "@ngneat/elf";
import { useObservable } from "@ngneat/use-observable";

import { appStateStore } from "../app";

const TerrainPlane: FC = () => {
  const [terrainHeightmapTexture] = useObservable(
    appStateStore.pipe(select((state) => state.terrainHeightmapTexture))
  );
  const [terrainTexture] = useObservable(
    appStateStore.pipe(select((state) => state.terrainTexture))
  );
  const [terrainSize] = useObservable(
    appStateStore.pipe(select((state) => state.terrainSize))
  );
  const geometryRef = useRef(null);

  useEffect(() => {
    if (geometryRef) {
      // debugger;
    }
  }, [geometryRef]);
  return (
    <>
      <animated.mesh receiveShadow>
        <planeGeometry
          args={[
            terrainSize.x,
            terrainSize.y,
            terrainSize.x * 2,
            terrainSize.y * 2,
          ]}
          onUpdate={(self) => self.computeVertexNormals()}
          ref={geometryRef}
        />
        <meshPhongMaterial
          displacementMap={terrainHeightmapTexture}
          // displacementScale={3}
          flatShading={true}
          map={terrainTexture}
        />
      </animated.mesh>
    </>
  );
};

export default TerrainPlane;
